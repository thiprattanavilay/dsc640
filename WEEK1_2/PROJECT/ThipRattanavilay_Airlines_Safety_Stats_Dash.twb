<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook original-version='18.1' source-build='2020.3.2 (20203.20.1018.2303)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='airline-safety' inline='true' name='federated.1m5q96s03qfgpi197k7330k6ytbg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airline-safety' name='textscan.002wou41o36znt1di3t290xxmuzb'>
            <connection class='textscan' directory='/Users/Brett/Desktop' filename='airline-safety.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.002wou41o36znt1di3t290xxmuzb' name='airline-safety.csv' table='[airline-safety#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='airline' ordinal='0' />
            <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
            <column datatype='integer' name='incidents_85_99' ordinal='2' />
            <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
            <column datatype='integer' name='fatalities_85_99' ordinal='4' />
            <column datatype='integer' name='incidents_00_14' ordinal='5' />
            <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
            <column datatype='integer' name='fatalities_00_14' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.002wou41o36znt1di3t290xxmuzb' name='airline-safety.csv' table='[airline-safety#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='airline' ordinal='0' />
            <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
            <column datatype='integer' name='incidents_85_99' ordinal='2' />
            <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
            <column datatype='integer' name='fatalities_85_99' ordinal='4' />
            <column datatype='integer' name='incidents_00_14' ordinal='5' />
            <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
            <column datatype='integer' name='fatalities_00_14' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>airline</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avail_seat_km_per_week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[avail_seat_km_per_week]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>avail_seat_km_per_week</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incidents_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incidents_85_99]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>incidents_85_99</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatal_accidents_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatal_accidents_85_99]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatal_accidents_85_99</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatalities_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatalities_85_99]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatalities_85_99</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incidents_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incidents_00_14]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>incidents_00_14</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatal_accidents_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatal_accidents_00_14]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatal_accidents_00_14</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatalities_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatalities_00_14]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatalities_00_14</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
      <column caption='Avail Seat Km Per Week' datatype='integer' name='[avail_seat_km_per_week]' role='dimension' type='quantitative' />
      <column caption='Fatal Accidents 00 14' datatype='integer' name='[fatal_accidents_00_14]' role='measure' type='quantitative' />
      <column caption='Fatal Accidents 85 99' datatype='integer' name='[fatal_accidents_85_99]' role='measure' type='quantitative' />
      <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
      <column caption='Fatalities 85 99' datatype='integer' name='[fatalities_85_99]' role='measure' type='quantitative' />
      <column caption='Incidents 00 14' datatype='integer' name='[incidents_00_14]' role='measure' type='quantitative' />
      <column caption='Incidents 85 99' datatype='integer' name='[incidents_85_99]' role='measure' type='quantitative' />
      <column-instance column='[fatal_accidents_00_14]' derivation='Sum' name='[sum:fatal_accidents_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatal_accidents_85_99]' derivation='Sum' name='[sum:fatal_accidents_85_99:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatalities_85_99]' derivation='Sum' name='[sum:fatalities_85_99:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m5q96s03qfgpi197k7330k6ytbg].[sum:fatalities_00_14:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1m5q96s03qfgpi197k7330k6ytbg].[sum:fatal_accidents_85_99:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1m5q96s03qfgpi197k7330k6ytbg].[sum:fatal_accidents_00_14:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m5q96s03qfgpi197k7330k6ytbg].[sum:fatalities_85_99:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.002wou41o36znt1di3t290xxmuzb' name='airline-safety.csv' table='[airline-safety#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='airline' ordinal='0' />
                  <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
                  <column datatype='integer' name='incidents_85_99' ordinal='2' />
                  <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
                  <column datatype='integer' name='fatalities_85_99' ordinal='4' />
                  <column datatype='integer' name='incidents_00_14' ordinal='5' />
                  <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
                  <column datatype='integer' name='fatalities_00_14' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Car crashes by state)' inline='true' name='federated.1mjmgbs10ndo2f11vf9qx1k9q8ye' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Car crashes by state' name='excel-direct.0ep06ju0e5igf01f6i1aw0yu47rb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/trattanavilay/Downloads/DSC640-main2/Car crashes by state.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ep06ju0e5igf01f6i1aw0yu47rb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G52:no:A1:G52:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='Vehicle miles traveled (millions)' ordinal='2' />
            <column datatype='integer' name='Fatal crashes' ordinal='3' />
            <column datatype='integer' name='Deaths' ordinal='4' />
            <column datatype='real' name='Deaths per 100,000 population' ordinal='5' />
            <column datatype='real' name='Deaths per 100 million vehicle miles traveled' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ep06ju0e5igf01f6i1aw0yu47rb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G52:no:A1:G52:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='Vehicle miles traveled (millions)' ordinal='2' />
            <column datatype='integer' name='Fatal crashes' ordinal='3' />
            <column datatype='integer' name='Deaths' ordinal='4' />
            <column datatype='real' name='Deaths per 100,000 population' ordinal='5' />
            <column datatype='real' name='Deaths per 100 million vehicle miles traveled' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G52:no:A1:G52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle miles traveled (millions)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vehicle miles traveled (millions)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Vehicle miles traveled (millions)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatal crashes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fatal crashes]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Fatal crashes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths per 100,000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths per 100,000 population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Deaths per 100,000 population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths per 100 million vehicle miles traveled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths per 100 million vehicle miles traveled]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Deaths per 100 million vehicle miles traveled</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.0ep06ju0e5igf01f6i1aw0yu47rb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:G52:no:A1:G52:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='Vehicle miles traveled (millions)' ordinal='2' />
                  <column datatype='integer' name='Fatal crashes' ordinal='3' />
                  <column datatype='integer' name='Deaths' ordinal='4' />
                  <column datatype='real' name='Deaths per 100,000 population' ordinal='5' />
                  <column datatype='real' name='Deaths per 100 million vehicle miles traveled' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Wikipedia airline data)' inline='true' name='federated.0sd1x5z0jzpe991aem9oi0z29jei' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Wikipedia airline data' name='excel-direct.06jl78v00hyi1n1euoa6l17124nc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/trattanavilay/Downloads/DSC640-main2/Wikipedia airline data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.06jl78v00hyi1n1euoa6l17124nc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C53:no:A1:C53:0' header='yes' outcome='2'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Deaths' ordinal='1' />
            <column datatype='integer' name='Number of incidents' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.06jl78v00hyi1n1euoa6l17124nc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C53:no:A1:C53:0' header='yes' outcome='2'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Deaths' ordinal='1' />
            <column datatype='integer' name='Number of incidents' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C53:no:A1:C53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of incidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of incidents]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of incidents</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.06jl78v00hyi1n1euoa6l17124nc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C53:no:A1:C53:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Deaths' ordinal='1' />
                  <column datatype='integer' name='Number of incidents' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Aviation Safety )' inline='true' name='federated.0hz1ynm1qia7jw1fqqbno1eejjx0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Aviation Safety' name='excel-direct.0fu8poe0j0bfev11lybdx0etki78'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/trattanavilay/Downloads/DSC640-main2/Aviation Safety .xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0fu8poe0j0bfev11lybdx0etki78' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G81:no:A1:G81:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Airliner Accidents' ordinal='1' />
            <column datatype='integer' name='Airliner Fatalities' ordinal='2' />
            <column datatype='integer' name='Corp. jet Accidents' ordinal='3' />
            <column datatype='integer' name='Corp. jet Fatalities' ordinal='4' />
            <column datatype='integer' name='Hijackings' ordinal='5' />
            <column datatype='integer' name='Hijacking Fatalities' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0fu8poe0j0bfev11lybdx0etki78' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G81:no:A1:G81:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Airliner Accidents' ordinal='1' />
            <column datatype='integer' name='Airliner Fatalities' ordinal='2' />
            <column datatype='integer' name='Corp. jet Accidents' ordinal='3' />
            <column datatype='integer' name='Corp. jet Fatalities' ordinal='4' />
            <column datatype='integer' name='Hijackings' ordinal='5' />
            <column datatype='integer' name='Hijacking Fatalities' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G81:no:A1:G81:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airliner Accidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Airliner Accidents]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Airliner Accidents</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airliner Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Airliner Fatalities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Airliner Fatalities</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corp. jet Accidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Corp. jet Accidents]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Corp. jet Accidents</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corp. jet Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Corp. jet Fatalities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Corp. jet Fatalities</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hijackings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hijackings]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Hijackings</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hijacking Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hijacking Fatalities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Hijacking Fatalities</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.0fu8poe0j0bfev11lybdx0etki78' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:G81:no:A1:G81:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Airliner Accidents' ordinal='1' />
                  <column datatype='integer' name='Airliner Fatalities' ordinal='2' />
                  <column datatype='integer' name='Corp. jet Accidents' ordinal='3' />
                  <column datatype='integer' name='Corp. jet Fatalities' ordinal='4' />
                  <column datatype='integer' name='Hijackings' ordinal='5' />
                  <column datatype='integer' name='Hijacking Fatalities' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Airline Accidents Since 1940s'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Aviation Safety )' name='federated.0hz1ynm1qia7jw1fqqbno1eejjx0' />
          </datasources>
          <datasource-dependencies datasource='federated.0hz1ynm1qia7jw1fqqbno1eejjx0'>
            <column datatype='integer' name='[Airliner Accidents]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Airliner Accidents]' derivation='Sum' name='[sum:Airliner Accidents:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0hz1ynm1qia7jw1fqqbno1eejjx0].[sum:Airliner Accidents:qk]</rows>
        <cols>[federated.0hz1ynm1qia7jw1fqqbno1eejjx0].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{95BCDB34-E8D4-4C6D-85BD-BB1FEDAC8CBE}' />
    </worksheet>
    <worksheet name='Airline Deaths Since 1940s'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Aviation Safety )' name='federated.0hz1ynm1qia7jw1fqqbno1eejjx0' />
          </datasources>
          <datasource-dependencies datasource='federated.0hz1ynm1qia7jw1fqqbno1eejjx0'>
            <column datatype='integer' name='[Airliner Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Airliner Fatalities]' derivation='Sum' name='[sum:Airliner Fatalities:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0hz1ynm1qia7jw1fqqbno1eejjx0].[sum:Airliner Fatalities:qk]</rows>
        <cols>[federated.0hz1ynm1qia7jw1fqqbno1eejjx0].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{2BE6AE03-FD91-488B-8D68-952ED9EADAC0}' />
    </worksheet>
    <worksheet name='Airline Fatal Accidents Comparison 00 to 14 and 85 to 99'>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety' name='federated.1m5q96s03qfgpi197k7330k6ytbg' />
          </datasources>
          <datasource-dependencies datasource='federated.1m5q96s03qfgpi197k7330k6ytbg'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatal Accidents 00 14' datatype='integer' name='[fatal_accidents_00_14]' role='measure' type='quantitative' />
            <column caption='Fatal Accidents 85 99' datatype='integer' name='[fatal_accidents_85_99]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatal_accidents_00_14]' derivation='Sum' name='[sum:fatal_accidents_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatal_accidents_85_99]' derivation='Sum' name='[sum:fatal_accidents_85_99:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1m5q96s03qfgpi197k7330k6ytbg].[sum:fatal_accidents_00_14:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1m5q96s03qfgpi197k7330k6ytbg].[sum:fatal_accidents_85_99:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1m5q96s03qfgpi197k7330k6ytbg].[Multiple Values]</rows>
        <cols>([federated.1m5q96s03qfgpi197k7330k6ytbg].[none:airline:nk] / [federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{1CD93A9C-C6E0-4869-8004-4428F001BF2E}' />
    </worksheet>
    <worksheet name='Airline Fatalities Comparison 00 to 14 and 85 to 99'>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety' name='federated.1m5q96s03qfgpi197k7330k6ytbg' />
          </datasources>
          <datasource-dependencies datasource='federated.1m5q96s03qfgpi197k7330k6ytbg'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
            <column caption='Fatalities 85 99' datatype='integer' name='[fatalities_85_99]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatalities_85_99]' derivation='Sum' name='[sum:fatalities_85_99:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1m5q96s03qfgpi197k7330k6ytbg].[sum:fatalities_00_14:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1m5q96s03qfgpi197k7330k6ytbg].[sum:fatalities_85_99:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1m5q96s03qfgpi197k7330k6ytbg].[Multiple Values]</rows>
        <cols>([federated.1m5q96s03qfgpi197k7330k6ytbg].[none:airline:nk] / [federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{E1308287-1154-4C3E-9394-FC22A424309E}' />
    </worksheet>
    <worksheet name='Car Crash Deaths Based on 100 Million Vehicle Miles Traveled'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Car crashes by state)' name='federated.1mjmgbs10ndo2f11vf9qx1k9q8ye' />
          </datasources>
          <datasource-dependencies datasource='federated.1mjmgbs10ndo2f11vf9qx1k9q8ye'>
            <column datatype='real' name='[Deaths per 100 million vehicle miles traveled]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths per 100 million vehicle miles traveled]' derivation='Sum' name='[sum:Deaths per 100 million vehicle miles traveled:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths per 100 million vehicle miles traveled:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths per 100 million vehicle miles traveled:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths per 100 million vehicle miles traveled:qk]' />
              <color column='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths per 100 million vehicle miles traveled:qk]' />
              <text column='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[none:State:nk]' />
              <text column='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths per 100 million vehicle miles traveled:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B4144DAE-3E53-471D-91FD-E032E7C4E888}' />
    </worksheet>
    <worksheet name='Deaths Per State By Car Crash'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Car crashes by state)' name='federated.1mjmgbs10ndo2f11vf9qx1k9q8ye' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mjmgbs10ndo2f11vf9qx1k9q8ye'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' value='6' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths:qk]' />
              <lod column='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[none:State:nk]' />
              <color column='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths:qk]' />
              <geometry column='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[Latitude (generated)]</rows>
        <cols>[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EAD3E567-DB8A-4757-BF1A-0366D57886A5}' />
    </worksheet>
    <worksheet name='Number of Airline Deaths Since 1970'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Wikipedia airline data)' name='federated.0sd1x5z0jzpe991aem9oi0z29jei' />
          </datasources>
          <datasource-dependencies datasource='federated.0sd1x5z0jzpe991aem9oi0z29jei'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0sd1x5z0jzpe991aem9oi0z29jei].[sum:Deaths:qk]</rows>
        <cols>[federated.0sd1x5z0jzpe991aem9oi0z29jei].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{DA87C4A0-9AFE-4F56-AD4B-EF223C1F5AE0}' />
    </worksheet>
    <worksheet name='Number of Airline Incidents Since 1970'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Wikipedia airline data)' name='federated.0sd1x5z0jzpe991aem9oi0z29jei' />
          </datasources>
          <datasource-dependencies datasource='federated.0sd1x5z0jzpe991aem9oi0z29jei'>
            <column datatype='integer' name='[Number of incidents]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of incidents]' derivation='Sum' name='[sum:Number of incidents:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0sd1x5z0jzpe991aem9oi0z29jei].[sum:Number of incidents:qk]</rows>
        <cols>[federated.0sd1x5z0jzpe991aem9oi0z29jei].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{59B90D0D-8C62-4790-B044-53F15991F484}' />
    </worksheet>
    <worksheet name='Number of Hijackings Since 1940s'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Aviation Safety )' name='federated.0hz1ynm1qia7jw1fqqbno1eejjx0' />
          </datasources>
          <datasource-dependencies datasource='federated.0hz1ynm1qia7jw1fqqbno1eejjx0'>
            <column datatype='integer' name='[Hijackings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hijackings]' derivation='Sum' name='[sum:Hijackings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0hz1ynm1qia7jw1fqqbno1eejjx0].[sum:Hijackings:qk]</rows>
        <cols>[federated.0hz1ynm1qia7jw1fqqbno1eejjx0].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{E77C4103-9CB6-4746-9365-1957D30A79E0}' />
    </worksheet>
  </worksheets>
  <windows source-height='93'>
    <window class='worksheet' name='Number of Airline Deaths Since 1970'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sd1x5z0jzpe991aem9oi0z29jei].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73EBE382-BAB1-4DFD-95A4-63FF404396CA}' />
    </window>
    <window class='worksheet' maximized='true' name='Number of Airline Incidents Since 1970'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sd1x5z0jzpe991aem9oi0z29jei].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEC9F0BF-412D-4A79-8999-114505A61BD1}' />
    </window>
    <window class='worksheet' name='Airline Fatalities Comparison 00 to 14 and 85 to 99'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]</field>
            <field>[federated.1m5q96s03qfgpi197k7330k6ytbg].[none:airline:nk]</field>
            <field>[federated.1m5q96s03qfgpi197k7330k6ytbg].[sum:fatal_accidents_00_14:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A33DD50-2F04-412E-9B10-FF136201E3A1}' />
    </window>
    <window class='worksheet' name='Airline Fatal Accidents Comparison 00 to 14 and 85 to 99'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m5q96s03qfgpi197k7330k6ytbg].[:Measure Names]</field>
            <field>[federated.1m5q96s03qfgpi197k7330k6ytbg].[none:airline:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94C30A2A-C85F-494C-BF0F-9CE917946444}' />
    </window>
    <window class='worksheet' name='Deaths Per State By Car Crash'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FAFAF934-E43E-42FB-BAA7-BCA2E448648C}' />
    </window>
    <window class='worksheet' name='Car Crash Deaths Based on 100 Million Vehicle Miles Traveled'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[sum:Deaths per 100 million vehicle miles traveled:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mjmgbs10ndo2f11vf9qx1k9q8ye].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD4A46FE-639A-4654-85BA-9896C1F53019}' />
    </window>
    <window class='worksheet' name='Airline Accidents Since 1940s'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hz1ynm1qia7jw1fqqbno1eejjx0].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C03A2B4A-50F4-4B18-B4E1-E95285322A50}' />
    </window>
    <window class='worksheet' name='Airline Deaths Since 1940s'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hz1ynm1qia7jw1fqqbno1eejjx0].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B009B3EB-4A19-4527-858B-131AA0D9FDFE}' />
    </window>
    <window class='worksheet' name='Number of Hijackings Since 1940s'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hz1ynm1qia7jw1fqqbno1eejjx0].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FBD7A15-AA01-4FE8-B0B7-7597F73A0228}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airline Accidents Since 1940s' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airline Deaths Since 1940s' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airline Fatal Accidents Comparison 00 to 14 and 85 to 99' width='192'>
      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
      4EHj/wfe5PiQYZHFSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Airline Fatalities Comparison 00 to 14 and 85 to 99' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Car Crash Deaths Based on 100 Million Vehicle Miles Traveled' width='192'>
      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
      elbW/wfdMy23AwO6JwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Deaths Per State By Car Crash' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Airline Deaths Since 1970' width='192'>
      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
      OYwYuPsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Airline Incidents Since 1970' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Hijackings Since 1940s' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
